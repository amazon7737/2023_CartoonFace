{"ast":null,"code":"var _jsxFileName = \"/Users/amazon/lunch/\\u110B\\u1165\\u11AF\\u1100\\u116E\\u11AF/flask_faceWeb/app/src/Components/Three.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Three = () => {\n  _s();\n  const apiUrl = `/recent`;\n  const [ImageList, setImageList] = useState([]);\n\n  // function SurvivorPerk () {\n\n  //   let ImgData = data.data.map((detail, index) => {\n\n  //     return (\n  //       <div key={index}>\n  //         <span>{detail.name}</span>\n  //         <img src={detail.url} />\n  //       </div>\n  //     );\n  //   });\n\n  //   return (\n  //     <>\n  //       {ImgData}\n  //     </>\n  //   );\n\n  // }\n\n  // 이미지 받기\n  const ImagetoMe = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${apiUrl}`);\n      console.log(\"따끈\", data.data.original[0]);\n      setImageList(data.data.original[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //   const TestFunction = async() => {}\n  // useEffect(() => TestFunction(),[])\n\n  // 함수 실행할때는 {} 를 꼭 붙여줘야 한다 -> destroy is not function\n  useEffect(() => {\n    ImagetoMe();\n  }, []);\n  console.log(\"??\", ImageList);\n  // const imgUrl = \"../../server/\" + String(data);\n  // return (\n  //   <>\n  //     <Header title={\"사진 선택\"} />\n  //     <img src=\"../../server/\" />\n  //   </>\n  // );\n\n  let ImgData = ImageList.map((detail, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"사진 선택\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), ImgData]\n  }, void 0, true);\n};\n_s(Three, \"YaLylJIxmsVE+PpvvKJhVJIbwIk=\");\n_c = Three;\nexport default Three;\nvar _c;\n$RefreshReg$(_c, \"Three\");","map":{"version":3,"names":["React","useEffect","useState","Header","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Three","_s","apiUrl","ImageList","setImageList","ImagetoMe","data","get","console","log","original","error","ImgData","map","detail","index","children","src","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/amazon/lunch/얼굴/flask_faceWeb/app/src/Components/Three.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\n\nconst Three = () => {\n  const apiUrl = `/recent`;\n  const [ImageList, setImageList] = useState([]);\n\n  // function SurvivorPerk () {\n\n  //   let ImgData = data.data.map((detail, index) => {\n\n  //     return (\n  //       <div key={index}>\n  //         <span>{detail.name}</span>\n  //         <img src={detail.url} />\n  //       </div>\n  //     );\n  //   });\n\n  //   return (\n  //     <>\n  //       {ImgData}\n  //     </>\n  //   );\n\n  // }\n\n  // 이미지 받기\n  const ImagetoMe = async () => {\n    try {\n      const { data } = await axios.get(`${apiUrl}`);\n      console.log(\"따끈\", data.data.original[0]);\n\n      setImageList(data.data.original[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //   const TestFunction = async() => {}\n  // useEffect(() => TestFunction(),[])\n\n  // 함수 실행할때는 {} 를 꼭 붙여줘야 한다 -> destroy is not function\n  useEffect(() => {\n    ImagetoMe();\n  }, []);\n\n  console.log(\"??\", ImageList);\n  // const imgUrl = \"../../server/\" + String(data);\n  // return (\n  //   <>\n  //     <Header title={\"사진 선택\"} />\n  //     <img src=\"../../server/\" />\n  //   </>\n  // );\n\n  let ImgData = ImageList.map((detail, index) => {\n    return (\n      <>\n        <img src={detail} />\n      </>\n    );\n  });\n  return (\n    <>\n      <Header title={\"사진 선택\"} />\n      {ImgData}\n    </>\n  );\n};\n\nexport default Three;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,MAAM,GAAI,SAAQ;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9C;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEL,MAAO,EAAC,CAAC;MAC7CM,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEH,IAAI,CAACA,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;MAExCN,YAAY,CAACE,IAAI,CAACA,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA;;EAEA;EACAnB,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENG,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEN,SAAS,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIS,OAAO,GAAGT,SAAS,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC7C,oBACElB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,eACEnB,OAAA;QAAKoB,GAAG,EAAEH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBACpB,CAAC;EAEP,CAAC,CAAC;EACF,oBACExB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACH,MAAM;MAAC4B,KAAK,EAAE;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzBT,OAAO;EAAA,eACR,CAAC;AAEP,CAAC;AAACX,EAAA,CAlEID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAoEX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}