{"ast":null,"code":"var _jsxFileName = \"/Users/amazon/lunch/\\u110B\\u1165\\u11AF\\u1100\\u116E\\u11AF/flask_faceWeb/app/src/Components/Three.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport \"./Styles/Three.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Three = () => {\n  _s();\n  const apiUrl = `/recent`;\n  const [ImageList, setImageList] = useState([]);\n  const [SelectedList, setSelectedList] = useState([]);\n\n  // 이미지 받기\n  const ImagetoMe = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${apiUrl}`);\n      console.log(\"따끈\", data.data.original[0]);\n      setImageList(data.data.original[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // 함수 실행할때는 {} 를 꼭 붙여줘야 한다 -> destroy is not function\n  useEffect(() => {\n    ImagetoMe();\n  }, []);\n  console.log(\"??\", ImageList);\n  let ImgData = ImageList.map((detail, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonImg\",\n        onClick: () => {\n          selectFunction(detail);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  });\n\n  // 선택된 사진들 배열에 추가\n  const selectFunction = ImageData => {\n    let tempList = [...ImageData];\n    setSelectedList(tempList);\n  };\n\n  // 선택된 사진 뿌리기\n  let SelectedData = setImageList.map((detail, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"사진 선택\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: ImgData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Three, \"0Wv0yrrUPQIORWocDODqivqpW9U=\");\n_c = Three;\nexport default Three;\nvar _c;\n$RefreshReg$(_c, \"Three\");","map":{"version":3,"names":["React","useEffect","useState","Header","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Three","_s","apiUrl","ImageList","setImageList","SelectedList","setSelectedList","ImagetoMe","data","get","console","log","original","error","ImgData","map","detail","index","children","className","onClick","selectFunction","src","fileName","_jsxFileName","lineNumber","columnNumber","ImageData","tempList","SelectedData","title","_c","$RefreshReg$"],"sources":["/Users/amazon/lunch/얼굴/flask_faceWeb/app/src/Components/Three.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport \"./Styles/Three.css\";\n\nconst Three = () => {\n  const apiUrl = `/recent`;\n  const [ImageList, setImageList] = useState([]);\n  const [SelectedList, setSelectedList] = useState([]);\n\n  // 이미지 받기\n  const ImagetoMe = async () => {\n    try {\n      const { data } = await axios.get(`${apiUrl}`);\n      console.log(\"따끈\", data.data.original[0]);\n\n      setImageList(data.data.original[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // 함수 실행할때는 {} 를 꼭 붙여줘야 한다 -> destroy is not function\n  useEffect(() => {\n    ImagetoMe();\n  }, []);\n\n  console.log(\"??\", ImageList);\n\n  let ImgData = ImageList.map((detail, index) => {\n    return (\n      <>\n        <button\n          className=\"buttonImg\"\n          onClick={() => {\n            selectFunction(detail);\n          }}\n        >\n          <img className=\"img\" src={detail} />\n        </button>\n      </>\n    );\n  });\n\n  // 선택된 사진들 배열에 추가\n  const selectFunction = (ImageData) => {\n    let tempList = [...ImageData];\n    setSelectedList(tempList);\n  };\n\n  // 선택된 사진 뿌리기\n  let SelectedData = setImageList.map((detail, index) => {\n    return (\n      <>\n        <img src={detail} />\n      </>\n    );\n  });\n\n  return (\n    <>\n      <Header title={\"사진 선택\"} />\n      <div className=\"container\">\n        <div className=\"selected-container\"></div>\n        <div className=\"select-container\">\n          <div className=\"img\">{ImgData}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Three;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}